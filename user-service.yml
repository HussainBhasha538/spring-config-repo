server:
  port: 8081

spring:
  application:
    name: user-service
  profiles:
    active: dev
  cloud:
    config:
      uri: http://localhost:8888

  datasource:
    url: jdbc:mysql://localhost:3306/userdb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  zipkin:
    base-url: http://localhost:9411

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, info, circuitbreakers
  endpoint:
    health:
      show-details: always

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true

resilience4j:
  circuitbreaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 30s

  retry:
    instances:
      userServiceRetry:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.io.IOException
          - org.springframework.web.client.HttpServerErrorException
        ignore-exceptions:
          - com.example.userService.exception.ResourceNotFoundException

  timelimiter:
    instances:
      productService:
        timeout-duration: 3s

logging:
  level:
    root: info
    "[com.example.userService]": DEBUG
    "[io.github.resilience4j.circuitbreaker]": DEBUG
    "[org.springframework.cloud.openfeign]": WARN
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

info:
  app:
    name: user-service
    version: 1.0

user:
  message: "Hello from user-service dev profile!"
